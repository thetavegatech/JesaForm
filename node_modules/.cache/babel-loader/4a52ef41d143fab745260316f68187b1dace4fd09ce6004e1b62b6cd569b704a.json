{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { BrowserCodeReader } from './BrowserCodeReader';\nimport DataMatrixReader from '../core/datamatrix/DataMatrixReader';\n/**\n * @deprecated Moving to @zxing/browser\n *\n * QR Code reader to use from browser.\n */\nvar BrowserDatamatrixCodeReader = /** @class */function (_super) {\n  __extends(BrowserDatamatrixCodeReader, _super);\n  /**\n   * Creates an instance of BrowserQRCodeReader.\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n   */\n  function BrowserDatamatrixCodeReader(timeBetweenScansMillis) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n    return _super.call(this, new DataMatrixReader(), timeBetweenScansMillis) || this;\n  }\n  return BrowserDatamatrixCodeReader;\n}(BrowserCodeReader);\nexport { BrowserDatamatrixCodeReader };","map":{"version":3,"names":["BrowserCodeReader","DataMatrixReader","BrowserDatamatrixCodeReader","_super","__extends","timeBetweenScansMillis","call"],"sources":["../../../src/browser/BrowserDatamatrixCodeReader.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,gBAAgB,MAAM,qCAAqC;AAElE;;;;;AAKA,IAAAC,2BAAA,0BAAAC,MAAA;EAAiDC,SAAA,CAAAF,2BAAA,EAAAC,MAAA;EAC7C;;;;EAIA,SAAAD,4BAAmBG,sBAAoC;IAApC,IAAAA,sBAAA;MAAAA,sBAAA,MAAoC;IAAA;WACnDF,MAAA,CAAAG,IAAA,OAAM,IAAIL,gBAAgB,EAAE,EAAEI,sBAAsB,CAAC;EACzD;EACJ,OAAAH,2BAAC;AAAD,CAAC,CARgDF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}