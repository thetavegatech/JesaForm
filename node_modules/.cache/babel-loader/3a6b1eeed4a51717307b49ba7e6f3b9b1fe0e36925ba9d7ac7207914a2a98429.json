{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport AI01decoder from './AI01decoder';\nimport StringBuilder from '../../../../util/StringBuilder';\nvar AI01AndOtherAIs = /** @class */function (_super) {\n  __extends(AI01AndOtherAIs, _super);\n  // the second one is the encodation method, and the other two are for the variable length\n  function AI01AndOtherAIs(information) {\n    return _super.call(this, information) || this;\n  }\n  AI01AndOtherAIs.prototype.parseInformation = function () {\n    var buff = new StringBuilder();\n    buff.append('(01)');\n    var initialGtinPosition = buff.length();\n    var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n    buff.append(firstGtinDigit);\n    this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n    return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n  };\n  AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; // first bit encodes the linkage flag,\n  return AI01AndOtherAIs;\n}(AI01decoder);\nexport default AI01AndOtherAIs;","map":{"version":3,"names":["AI01decoder","StringBuilder","AI01AndOtherAIs","_super","__extends","information","call","prototype","parseInformation","buff","append","initialGtinPosition","length","firstGtinDigit","getGeneralDecoder","extractNumericValueFromBitArray","HEADER_SIZE","encodeCompressedGtinWithoutAI","decodeAllCodes"],"sources":["../../../../../../../src/core/oned/rss/expanded/decoders/AI01AndOtherAIs.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,WAAW,MAAM,eAAe;AAEvC,OAAOC,aAAa,MAAM,gCAAgC;AAE1D,IAAAC,eAAA,0BAAAC,MAAA;EAA6CC,SAAA,CAAAF,eAAA,EAAAC,MAAA;EAG3C;EAEA,SAAAD,gBAAYG,WAAqB;WAC/BF,MAAA,CAAAG,IAAA,OAAMD,WAAW,CAAC;EACpB;EAEOH,eAAA,CAAAK,SAAA,CAAAC,gBAAgB,GAAvB;IAEE,IAAIC,IAAI,GAAG,IAAIR,aAAa,EAAE;IAC9BQ,IAAI,CAACC,MAAM,CAAC,MAAM,CAAC;IACnB,IAAIC,mBAAmB,GAAGF,IAAI,CAACG,MAAM,EAAE;IACvC,IAAIC,cAAc,GAAG,IAAI,CAACC,iBAAiB,EAAE,CAACC,+BAA+B,CAACb,eAAe,CAACc,WAAW,EAAE,CAAC,CAAC;IAC7GP,IAAI,CAACC,MAAM,CAACG,cAAc,CAAC;IAC3B,IAAI,CAACI,6BAA6B,CAACR,IAAI,EAAEP,eAAe,CAACc,WAAW,GAAG,CAAC,EAAEL,mBAAmB,CAAC;IAC9F,OAAO,IAAI,CAACG,iBAAiB,EAAE,CAACI,cAAc,CAACT,IAAI,EAAEP,eAAe,CAACc,WAAW,GAAG,EAAE,CAAC;EACxF,CAAC;EAhBuBd,eAAA,CAAAc,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAkBnD,OAAAd,eAAC;CAAA,CApB4CF,WAAW;eAAnCE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}