{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport InvertedLuminanceSource from '../core/InvertedLuminanceSource';\nimport LuminanceSource from '../core/LuminanceSource';\nimport IllegalArgumentException from '../core/IllegalArgumentException';\n/**\n * @deprecated Moving to @zxing/browser\n */\nvar HTMLCanvasElementLuminanceSource = /** @class */function (_super) {\n  __extends(HTMLCanvasElementLuminanceSource, _super);\n  function HTMLCanvasElementLuminanceSource(canvas) {\n    var _this = _super.call(this, canvas.width, canvas.height) || this;\n    _this.canvas = canvas;\n    _this.tempCanvasElement = null;\n    _this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n    return _this;\n  }\n  HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData = function (canvas) {\n    var imageData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n    return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n  };\n  HTMLCanvasElementLuminanceSource.toGrayscaleBuffer = function (imageBuffer, width, height) {\n    var grayscaleBuffer = new Uint8ClampedArray(width * height);\n    for (var i = 0, j = 0, length_1 = imageBuffer.length; i < length_1; i += 4, j++) {\n      var gray = void 0;\n      var alpha = imageBuffer[i + 3];\n      // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n      // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n      // barcode image. Force any such pixel to be white:\n      if (alpha === 0) {\n        gray = 0xFF;\n      } else {\n        var pixelR = imageBuffer[i];\n        var pixelG = imageBuffer[i + 1];\n        var pixelB = imageBuffer[i + 2];\n        // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n        // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n        // 0x200 >> 10 is 0.5, it implements rounding.\n        gray = 306 * pixelR + 601 * pixelG + 117 * pixelB + 0x200 >> 10;\n      }\n      grayscaleBuffer[j] = gray;\n    }\n    return grayscaleBuffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getRow = function (y /*int*/, row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n    }\n    var width = this.getWidth();\n    var start = y * width;\n    if (row === null) {\n      row = this.buffer.slice(start, start + width);\n    } else {\n      if (row.length < width) {\n        row = new Uint8ClampedArray(width);\n      }\n      // The underlying raster of image consists of bytes with the luminance values\n      // TODO: can avoid set/slice?\n      row.set(this.buffer.slice(start, start + width));\n    }\n    return row;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getMatrix = function () {\n    return this.buffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n    _super.prototype.crop.call(this, left, top, width, height);\n    return this;\n  };\n  /**\n   * This is always true, since the image is a gray-scale image.\n   *\n   * @return true\n   */\n  HTMLCanvasElementLuminanceSource.prototype.isRotateSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise = function () {\n    this.rotate(-90);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    this.rotate(-45);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getTempCanvasElement = function () {\n    if (null === this.tempCanvasElement) {\n      var tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n      tempCanvasElement.width = this.canvas.width;\n      tempCanvasElement.height = this.canvas.height;\n      this.tempCanvasElement = tempCanvasElement;\n    }\n    return this.tempCanvasElement;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotate = function (angle) {\n    var tempCanvasElement = this.getTempCanvasElement();\n    var tempContext = tempCanvasElement.getContext('2d');\n    var angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\n    // Calculate and set new dimensions for temp canvas\n    var width = this.canvas.width;\n    var height = this.canvas.height;\n    var newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n    var newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n    tempCanvasElement.width = newWidth;\n    tempCanvasElement.height = newHeight;\n    // Draw at center of temp canvas to prevent clipping of image data\n    tempContext.translate(newWidth / 2, newHeight / 2);\n    tempContext.rotate(angleRadians);\n    tempContext.drawImage(this.canvas, width / -2, height / -2);\n    this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource(this);\n  };\n  HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n  return HTMLCanvasElementLuminanceSource;\n}(LuminanceSource);\nexport { HTMLCanvasElementLuminanceSource };","map":{"version":3,"names":["InvertedLuminanceSource","LuminanceSource","IllegalArgumentException","HTMLCanvasElementLuminanceSource","_super","__extends","canvas","_this","call","width","height","tempCanvasElement","buffer","makeBufferFromCanvasImageData","imageData","getContext","getImageData","toGrayscaleBuffer","data","imageBuffer","grayscaleBuffer","Uint8ClampedArray","i","j","length_1","length","gray","alpha","pixelR","pixelG","pixelB","prototype","getRow","y","row","getHeight","getWidth","start","slice","set","getMatrix","isCropSupported","crop","left","top","isRotateSupported","rotateCounterClockwise","rotate","rotateCounterClockwise45","getTempCanvasElement","ownerDocument","createElement","angle","tempContext","angleRadians","DEGREE_TO_RADIANS","newWidth","Math","ceil","abs","cos","sin","newHeight","translate","drawImage","invert","PI"],"sources":["../../../src/browser/HTMLCanvasElementLuminanceSource.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}