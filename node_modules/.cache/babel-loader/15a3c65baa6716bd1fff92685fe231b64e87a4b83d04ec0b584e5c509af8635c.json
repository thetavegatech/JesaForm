{"ast":null,"code":"/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/*namespace com.google.zxing.oned {*/\nimport BarcodeFormat from '../BarcodeFormat';\nimport DecodeHintType from '../DecodeHintType';\nimport NotFoundException from '../NotFoundException';\nimport Code128Reader from './Code128Reader';\nimport Code39Reader from './Code39Reader';\nimport ITFReader from './ITFReader';\nimport MultiFormatUPCEANReader from './MultiFormatUPCEANReader';\nimport OneDReader from './OneDReader';\nimport RSSExpandedReader from './rss/expanded/RSSExpandedReader';\nimport RSS14Reader from './rss/RSS14Reader';\n/**\n * @author Daniel Switkin <dswitkin@google.com>\n * @author Sean Owen\n */\nvar MultiFormatOneDReader = /** @class */function (_super) {\n  __extends(MultiFormatOneDReader, _super);\n  function MultiFormatOneDReader(hints) {\n    var _this = _super.call(this) || this;\n    _this.readers = [];\n    var possibleFormats = !hints ? null : hints.get(DecodeHintType.POSSIBLE_FORMATS);\n    var useCode39CheckDigit = hints && hints.get(DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n    if (possibleFormats) {\n      if (possibleFormats.includes(BarcodeFormat.EAN_13) || possibleFormats.includes(BarcodeFormat.UPC_A) || possibleFormats.includes(BarcodeFormat.EAN_8) || possibleFormats.includes(BarcodeFormat.UPC_E)) {\n        _this.readers.push(new MultiFormatUPCEANReader(hints));\n      }\n      if (possibleFormats.includes(BarcodeFormat.CODE_39)) {\n        _this.readers.push(new Code39Reader(useCode39CheckDigit));\n      }\n      // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n      //    this.readers.push(new Code93Reader());\n      // }\n      if (possibleFormats.includes(BarcodeFormat.CODE_128)) {\n        _this.readers.push(new Code128Reader());\n      }\n      if (possibleFormats.includes(BarcodeFormat.ITF)) {\n        _this.readers.push(new ITFReader());\n      }\n      // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n      //    this.readers.push(new CodaBarReader());\n      // }\n      if (possibleFormats.includes(BarcodeFormat.RSS_14)) {\n        _this.readers.push(new RSS14Reader());\n      }\n      if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n        console.warn('RSS Expanded reader IS NOT ready for production yet! use at your own risk.');\n        _this.readers.push(new RSSExpandedReader());\n      }\n    }\n    if (_this.readers.length === 0) {\n      _this.readers.push(new MultiFormatUPCEANReader(hints));\n      _this.readers.push(new Code39Reader());\n      // this.readers.push(new CodaBarReader());\n      // this.readers.push(new Code93Reader());\n      _this.readers.push(new MultiFormatUPCEANReader(hints));\n      _this.readers.push(new Code128Reader());\n      _this.readers.push(new ITFReader());\n      _this.readers.push(new RSS14Reader());\n      // this.readers.push(new RSSExpandedReader());\n    }\n    return _this;\n  }\n  // @Override\n  MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    for (var i = 0; i < this.readers.length; i++) {\n      try {\n        return this.readers[i].decodeRow(rowNumber, row, hints);\n      } catch (re) {\n        // continue\n      }\n    }\n    throw new NotFoundException();\n  };\n  // @Override\n  MultiFormatOneDReader.prototype.reset = function () {\n    this.readers.forEach(function (reader) {\n      return reader.reset();\n    });\n  };\n  return MultiFormatOneDReader;\n}(OneDReader);\nexport default MultiFormatOneDReader;","map":{"version":3,"names":["BarcodeFormat","DecodeHintType","NotFoundException","Code128Reader","Code39Reader","ITFReader","MultiFormatUPCEANReader","OneDReader","RSSExpandedReader","RSS14Reader","MultiFormatOneDReader","_super","__extends","hints","_this","call","readers","possibleFormats","get","POSSIBLE_FORMATS","useCode39CheckDigit","ASSUME_CODE_39_CHECK_DIGIT","undefined","includes","EAN_13","UPC_A","EAN_8","UPC_E","push","CODE_39","CODE_128","ITF","RSS_14","RSS_EXPANDED","console","warn","length","prototype","decodeRow","rowNumber","row","i","re","reset","forEach","reader"],"sources":["../../../../src/core/oned/MultiFormatOneDReader.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}