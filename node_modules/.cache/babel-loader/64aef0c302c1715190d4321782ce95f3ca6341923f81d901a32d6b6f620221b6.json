{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { BrowserCodeReader } from './BrowserCodeReader';\nimport MultiFormatOneDReader from '../core/oned/MultiFormatOneDReader';\n/**\n * @deprecated Moving to @zxing/browser\n *\n * Barcode reader reader to use from browser.\n */\nvar BrowserBarcodeReader = /** @class */function (_super) {\n  __extends(BrowserBarcodeReader, _super);\n  /**\n   * Creates an instance of BrowserBarcodeReader.\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n   * @param {Map<DecodeHintType, any>} hints\n   */\n  function BrowserBarcodeReader(timeBetweenScansMillis, hints) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n    return _super.call(this, new MultiFormatOneDReader(hints), timeBetweenScansMillis, hints) || this;\n  }\n  return BrowserBarcodeReader;\n}(BrowserCodeReader);\nexport { BrowserBarcodeReader };","map":{"version":3,"names":["BrowserCodeReader","MultiFormatOneDReader","BrowserBarcodeReader","_super","__extends","timeBetweenScansMillis","hints","call"],"sources":["../../../src/browser/BrowserBarcodeReader.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,qBAAqB,MAAM,oCAAoC;AAGtE;;;;;AAKA,IAAAC,oBAAA,0BAAAC,MAAA;EAA0CC,SAAA,CAAAF,oBAAA,EAAAC,MAAA;EACtC;;;;;EAKA,SAAAD,qBAAmBG,sBAAoC,EAAEC,KAAgC;IAAtE,IAAAD,sBAAA;MAAAA,sBAAA,MAAoC;IAAA;WACnDF,MAAA,CAAAI,IAAA,OAAM,IAAIN,qBAAqB,CAACK,KAAK,CAAC,EAAED,sBAAsB,EAAEC,KAAK,CAAC;EAC1E;EACJ,OAAAJ,oBAAC;AAAD,CAAC,CATyCF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}