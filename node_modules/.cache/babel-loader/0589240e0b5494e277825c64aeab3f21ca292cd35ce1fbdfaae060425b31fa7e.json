{"ast":null,"code":"var _jsxFileName = \"D:\\\\Office work\\\\jesa\\\\src\\\\components\\\\scanner.js\",\n  _s = $RefreshSig$();\n// src/components/QRCodeScanner.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport './scanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeScanner = () => {\n  _s();\n  const [scanResult, setScanResult] = useState('');\n  const [details, setDetails] = useState(null);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err) => {\n      if (result) {\n        setScanResult(result.text);\n        fetchCustomerDetails(result.text);\n      }\n      if (err) {\n        setError('Error scanning QR code');\n      }\n    }).catch(err => setError('Error initializing scanner'));\n  }, []);\n  const fetchCustomerDetails = async qrCode => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/customer/details?qrCode=${qrCode}`);\n      const data = await response.json();\n      setDetails(data);\n    } catch (err) {\n      setError('Error fetching customer details');\n    }\n  };\n  const handleUpdateStatus = async () => {\n    try {\n      await fetch('http://localhost:4000/api/customer/update-status', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          qrCode: scanResult,\n          status\n        })\n      });\n      alert('Status updated successfully');\n    } catch (err) {\n      alert('Error updating status');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), details && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(details, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-update\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Update Status:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: status,\n            onChange: e => setStatus(e.target.value),\n            className: \"status-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateStatus,\n          className: \"update-btn\",\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeScanner, \"fL9cFnzEHLb8EDxmS/pGwhmB/pU=\");\n_c = QRCodeScanner;\nexport default QRCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QRCodeScanner\");","map":{"version":3,"names":["React","useRef","useState","useEffect","BrowserMultiFormatReader","jsxDEV","_jsxDEV","QRCodeScanner","_s","scanResult","setScanResult","details","setDetails","status","setStatus","error","setError","videoRef","codeReader","decodeFromVideoDevice","current","result","err","text","fetchCustomerDetails","catch","qrCode","response","fetch","data","json","handleUpdateStatus","method","headers","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Office work/jesa/src/components/scanner.js"],"sourcesContent":["// src/components/QRCodeScanner.js\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nimport './scanner.css';\r\n\r\nconst QRCodeScanner = () => {\r\n  const [scanResult, setScanResult] = useState('');\r\n  const [details, setDetails] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const codeReader = new BrowserMultiFormatReader();\r\n    codeReader\r\n      .decodeFromVideoDevice(null, videoRef.current, (result, err) => {\r\n        if (result) {\r\n          setScanResult(result.text);\r\n          fetchCustomerDetails(result.text);\r\n        }\r\n        if (err) {\r\n          setError('Error scanning QR code');\r\n        }\r\n      })\r\n      .catch(err => setError('Error initializing scanner'));\r\n  }, []);\r\n\r\n  const fetchCustomerDetails = async (qrCode) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/api/customer/details?qrCode=${qrCode}`);\r\n      const data = await response.json();\r\n      setDetails(data);\r\n    } catch (err) {\r\n      setError('Error fetching customer details');\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = async () => {\r\n    try {\r\n      await fetch('http://localhost:4000/api/customer/update-status', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ qrCode: scanResult, status })\r\n      });\r\n      alert('Status updated successfully');\r\n    } catch (err) {\r\n      alert('Error updating status');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      <h1>QR Code Scanner</h1>\r\n      <video ref={videoRef} style={{ width: '100%' }} />\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {details && (\r\n        <div className=\"details-container\">\r\n          <h2>Customer Details</h2>\r\n          <pre>{JSON.stringify(details, null, 2)}</pre>\r\n          <div className=\"status-update\">\r\n            <label>\r\n              Update Status:\r\n              <input\r\n                type=\"text\"\r\n                value={status}\r\n                onChange={(e) => setStatus(e.target.value)}\r\n                className=\"status-input\"\r\n              />\r\n            </label>\r\n            <button onClick={handleUpdateStatus} className=\"update-btn\">\r\n              Update Status\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}