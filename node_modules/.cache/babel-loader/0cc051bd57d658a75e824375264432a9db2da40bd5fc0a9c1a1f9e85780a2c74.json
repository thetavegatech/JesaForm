{"ast":null,"code":"/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport SimpleToken from './SimpleToken';\nvar BinaryShiftToken = /** @class */function (_super) {\n  __extends(BinaryShiftToken, _super);\n  function BinaryShiftToken(previous, binaryShiftStart, binaryShiftByteCount) {\n    var _this = _super.call(this, previous, 0, 0) || this;\n    _this.binaryShiftStart = binaryShiftStart;\n    _this.binaryShiftByteCount = binaryShiftByteCount;\n    return _this;\n  }\n  /**\n   * @Override\n   */\n  BinaryShiftToken.prototype.appendTo = function (bitArray, text) {\n    for (var i = 0; i < this.binaryShiftByteCount; i++) {\n      if (i === 0 || i === 31 && this.binaryShiftByteCount <= 62) {\n        // We need a header before the first character, and before\n        // character 31 when the total byte code is <= 62\n        bitArray.appendBits(31, 5); // BINARY_SHIFT\n        if (this.binaryShiftByteCount > 62) {\n          bitArray.appendBits(this.binaryShiftByteCount - 31, 16);\n        } else if (i === 0) {\n          // 1 <= binaryShiftByteCode <= 62\n          bitArray.appendBits(Math.min(this.binaryShiftByteCount, 31), 5);\n        } else {\n          // 32 <= binaryShiftCount <= 62 and i == 31\n          bitArray.appendBits(this.binaryShiftByteCount - 31, 5);\n        }\n      }\n      bitArray.appendBits(text[this.binaryShiftStart + i], 8);\n    }\n  };\n  BinaryShiftToken.prototype.addBinaryShift = function (start, byteCount) {\n    // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n    return new BinaryShiftToken(this, start, byteCount);\n  };\n  /**\n   * @Override\n   */\n  BinaryShiftToken.prototype.toString = function () {\n    return '<' + this.binaryShiftStart + '::' + (this.binaryShiftStart + this.binaryShiftByteCount - 1) + '>';\n  };\n  return BinaryShiftToken;\n}(SimpleToken);\nexport default BinaryShiftToken;","map":{"version":3,"names":["SimpleToken","BinaryShiftToken","_super","__extends","previous","binaryShiftStart","binaryShiftByteCount","_this","call","prototype","appendTo","bitArray","text","i","appendBits","Math","min","addBinaryShift","start","byteCount","toString"],"sources":["../../../../../src/core/aztec/encoder/BinaryShiftToken.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAOA,WAAW,MAAM,eAAe;AAIvC,IAAAC,gBAAA,0BAAAC,MAAA;EAAwDC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAKtD,SAAAD,iBACEG,QAAe,EACfC,gBAAqB,EACrBC,oBAAyB;IAH3B,IAAAC,KAAA,GAKEL,MAAA,CAAAM,IAAA,OAAMJ,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;IACrBG,KAAI,CAACF,gBAAgB,GAAUA,gBAAgB;IAC/CE,KAAI,CAACD,oBAAoB,GAAUA,oBAAoB;;EACzD;EAEA;;;EAGOL,gBAAA,CAAAQ,SAAA,CAAAC,QAAQ,GAAf,UAAgBC,QAAkB,EAAEC,IAA2B;IAC7D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACP,oBAAoB,EAAEO,CAAC,EAAE,EAAE;MAClD,IAAIA,CAAC,KAAK,CAAC,IAAKA,CAAC,KAAK,EAAE,IAAI,IAAI,CAACP,oBAAoB,IAAI,EAAG,EAAE;QAC5D;QACA;QACAK,QAAQ,CAACG,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAE;QAC7B,IAAI,IAAI,CAACR,oBAAoB,GAAG,EAAE,EAAE;UAClCK,QAAQ,CAACG,UAAU,CAAC,IAAI,CAACR,oBAAoB,GAAG,EAAE,EAAE,EAAE,CAAC;SACxD,MAAM,IAAIO,CAAC,KAAK,CAAC,EAAE;UAClB;UACAF,QAAQ,CAACG,UAAU,CAACC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACV,oBAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;SAChE,MAAM;UACL;UACAK,QAAQ,CAACG,UAAU,CAAC,IAAI,CAACR,oBAAoB,GAAG,EAAE,EAAE,CAAC,CAAC;;;MAG1DK,QAAQ,CAACG,UAAU,CAACF,IAAI,CAAC,IAAI,CAACP,gBAAgB,GAAGQ,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE3D,CAAC;EAEgBZ,gBAAA,CAAAQ,SAAA,CAAAQ,cAAc,GAA/B,UAAgCC,KAAU,EAAEC,SAAc;IACxD;IACA,OAAO,IAAIlB,gBAAgB,CAAC,IAAI,EAAEiB,KAAK,EAAEC,SAAS,CAAC;EACrD,CAAC;EAED;;;EAGOlB,gBAAA,CAAAQ,SAAA,CAAAW,QAAQ,GAAf;IACE,OAAO,GAAG,GAAG,IAAI,CAACf,gBAAgB,GAAG,IAAI,IAAI,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,GAAG,CAAC,CAAC,GAAG,GAAG;EAC3G,CAAC;EAEH,OAAAL,gBAAC;AAAD,CAAC,CAlDuDD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}